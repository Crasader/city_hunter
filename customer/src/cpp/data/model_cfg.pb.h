// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model_cfg.proto

#ifndef PROTOBUF_model_5fcfg_2eproto__INCLUDED
#define PROTOBUF_model_5fcfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gamer {
namespace cfg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_model_5fcfg_2eproto();
void protobuf_AssignDesc_model_5fcfg_2eproto();
void protobuf_ShutdownFile_model_5fcfg_2eproto();

class Model;
class ModelCfg;

enum ModelIDs {
  MODEL_HERO_KNIGHT = 0,
  MODEL_HERO_ARCHER = 1,
  MODEL_HERO_MAGE = 2
};
bool ModelIDs_IsValid(int value);
const ModelIDs ModelIDs_MIN = MODEL_HERO_KNIGHT;
const ModelIDs ModelIDs_MAX = MODEL_HERO_MAGE;
const int ModelIDs_ARRAYSIZE = ModelIDs_MAX + 1;

const ::google::protobuf::EnumDescriptor* ModelIDs_descriptor();
inline const ::std::string& ModelIDs_Name(ModelIDs value) {
  return ::google::protobuf::internal::NameOfEnum(
    ModelIDs_descriptor(), value);
}
inline bool ModelIDs_Parse(
    const ::std::string& name, ModelIDs* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModelIDs>(
    ModelIDs_descriptor(), name, value);
}
// ===================================================================

class Model : public ::google::protobuf::Message {
 public:
  Model();
  virtual ~Model();

  Model(const Model& from);

  inline Model& operator=(const Model& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Model& default_instance();

  void Swap(Model* other);

  // implements Message ----------------------------------------------

  Model* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Model& from);
  void MergeFrom(const Model& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required string file = 2;
  inline bool has_file() const;
  inline void clear_file();
  static const int kFileFieldNumber = 2;
  inline const ::std::string& file() const;
  inline void set_file(const ::std::string& value);
  inline void set_file(const char* value);
  inline void set_file(const char* value, size_t size);
  inline ::std::string* mutable_file();
  inline ::std::string* release_file();
  inline void set_allocated_file(::std::string* file);

  // @@protoc_insertion_point(class_scope:gamer.cfg.Model)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_file();
  inline void clear_has_file();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* file_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_model_5fcfg_2eproto();
  friend void protobuf_AssignDesc_model_5fcfg_2eproto();
  friend void protobuf_ShutdownFile_model_5fcfg_2eproto();

  void InitAsDefaultInstance();
  static Model* default_instance_;
};
// -------------------------------------------------------------------

class ModelCfg : public ::google::protobuf::Message {
 public:
  ModelCfg();
  virtual ~ModelCfg();

  ModelCfg(const ModelCfg& from);

  inline ModelCfg& operator=(const ModelCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelCfg& default_instance();

  void Swap(ModelCfg* other);

  // implements Message ----------------------------------------------

  ModelCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModelCfg& from);
  void MergeFrom(const ModelCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gamer.cfg.Model model = 1;
  inline int model_size() const;
  inline void clear_model();
  static const int kModelFieldNumber = 1;
  inline const ::gamer::cfg::Model& model(int index) const;
  inline ::gamer::cfg::Model* mutable_model(int index);
  inline ::gamer::cfg::Model* add_model();
  inline const ::google::protobuf::RepeatedPtrField< ::gamer::cfg::Model >&
      model() const;
  inline ::google::protobuf::RepeatedPtrField< ::gamer::cfg::Model >*
      mutable_model();

  // @@protoc_insertion_point(class_scope:gamer.cfg.ModelCfg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gamer::cfg::Model > model_;
  friend void  protobuf_AddDesc_model_5fcfg_2eproto();
  friend void protobuf_AssignDesc_model_5fcfg_2eproto();
  friend void protobuf_ShutdownFile_model_5fcfg_2eproto();

  void InitAsDefaultInstance();
  static ModelCfg* default_instance_;
};
// ===================================================================


// ===================================================================

// Model

// required int32 id = 1;
inline bool Model::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Model::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Model::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Model::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Model::id() const {
  // @@protoc_insertion_point(field_get:gamer.cfg.Model.id)
  return id_;
}
inline void Model::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:gamer.cfg.Model.id)
}

// required string file = 2;
inline bool Model::has_file() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Model::set_has_file() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Model::clear_has_file() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Model::clear_file() {
  if (file_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_->clear();
  }
  clear_has_file();
}
inline const ::std::string& Model::file() const {
  // @@protoc_insertion_point(field_get:gamer.cfg.Model.file)
  return *file_;
}
inline void Model::set_file(const ::std::string& value) {
  set_has_file();
  if (file_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_ = new ::std::string;
  }
  file_->assign(value);
  // @@protoc_insertion_point(field_set:gamer.cfg.Model.file)
}
inline void Model::set_file(const char* value) {
  set_has_file();
  if (file_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_ = new ::std::string;
  }
  file_->assign(value);
  // @@protoc_insertion_point(field_set_char:gamer.cfg.Model.file)
}
inline void Model::set_file(const char* value, size_t size) {
  set_has_file();
  if (file_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_ = new ::std::string;
  }
  file_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gamer.cfg.Model.file)
}
inline ::std::string* Model::mutable_file() {
  set_has_file();
  if (file_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:gamer.cfg.Model.file)
  return file_;
}
inline ::std::string* Model::release_file() {
  clear_has_file();
  if (file_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = file_;
    file_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Model::set_allocated_file(::std::string* file) {
  if (file_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete file_;
  }
  if (file) {
    set_has_file();
    file_ = file;
  } else {
    clear_has_file();
    file_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:gamer.cfg.Model.file)
}

// -------------------------------------------------------------------

// ModelCfg

// repeated .gamer.cfg.Model model = 1;
inline int ModelCfg::model_size() const {
  return model_.size();
}
inline void ModelCfg::clear_model() {
  model_.Clear();
}
inline const ::gamer::cfg::Model& ModelCfg::model(int index) const {
  // @@protoc_insertion_point(field_get:gamer.cfg.ModelCfg.model)
  return model_.Get(index);
}
inline ::gamer::cfg::Model* ModelCfg::mutable_model(int index) {
  // @@protoc_insertion_point(field_mutable:gamer.cfg.ModelCfg.model)
  return model_.Mutable(index);
}
inline ::gamer::cfg::Model* ModelCfg::add_model() {
  // @@protoc_insertion_point(field_add:gamer.cfg.ModelCfg.model)
  return model_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gamer::cfg::Model >&
ModelCfg::model() const {
  // @@protoc_insertion_point(field_list:gamer.cfg.ModelCfg.model)
  return model_;
}
inline ::google::protobuf::RepeatedPtrField< ::gamer::cfg::Model >*
ModelCfg::mutable_model() {
  // @@protoc_insertion_point(field_mutable_list:gamer.cfg.ModelCfg.model)
  return &model_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cfg
}  // namespace gamer

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::gamer::cfg::ModelIDs> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gamer::cfg::ModelIDs>() {
  return ::gamer::cfg::ModelIDs_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_model_5fcfg_2eproto__INCLUDED
