// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: actor_state_cfg.proto

#ifndef PROTOBUF_actor_5fstate_5fcfg_2eproto__INCLUDED
#define PROTOBUF_actor_5fstate_5fcfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gamer {
namespace cfg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_actor_5fstate_5fcfg_2eproto();
void protobuf_AssignDesc_actor_5fstate_5fcfg_2eproto();
void protobuf_ShutdownFile_actor_5fstate_5fcfg_2eproto();

class NextStateCfg;
class StateCfg;
class ActorStateCfg;

enum StateChangeRequirements {
  NO_REQUIREMENT = 0,
  HP_LOW1 = 1,
  HP_LOW2 = 2,
  RANDOM1 = 3,
  RANDOM2 = 4
};
bool StateChangeRequirements_IsValid(int value);
const StateChangeRequirements StateChangeRequirements_MIN = NO_REQUIREMENT;
const StateChangeRequirements StateChangeRequirements_MAX = RANDOM2;
const int StateChangeRequirements_ARRAYSIZE = StateChangeRequirements_MAX + 1;

const ::google::protobuf::EnumDescriptor* StateChangeRequirements_descriptor();
inline const ::std::string& StateChangeRequirements_Name(StateChangeRequirements value) {
  return ::google::protobuf::internal::NameOfEnum(
    StateChangeRequirements_descriptor(), value);
}
inline bool StateChangeRequirements_Parse(
    const ::std::string& name, StateChangeRequirements* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StateChangeRequirements>(
    StateChangeRequirements_descriptor(), name, value);
}
// ===================================================================

class NextStateCfg : public ::google::protobuf::Message {
 public:
  NextStateCfg();
  virtual ~NextStateCfg();

  NextStateCfg(const NextStateCfg& from);

  inline NextStateCfg& operator=(const NextStateCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NextStateCfg& default_instance();

  void Swap(NextStateCfg* other);

  // implements Message ----------------------------------------------

  NextStateCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NextStateCfg& from);
  void MergeFrom(const NextStateCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 state_id = 1;
  inline bool has_state_id() const;
  inline void clear_state_id();
  static const int kStateIdFieldNumber = 1;
  inline ::google::protobuf::int32 state_id() const;
  inline void set_state_id(::google::protobuf::int32 value);

  // required int32 state_change_requirement = 2;
  inline bool has_state_change_requirement() const;
  inline void clear_state_change_requirement();
  static const int kStateChangeRequirementFieldNumber = 2;
  inline ::google::protobuf::int32 state_change_requirement() const;
  inline void set_state_change_requirement(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamer.cfg.NextStateCfg)
 private:
  inline void set_has_state_id();
  inline void clear_has_state_id();
  inline void set_has_state_change_requirement();
  inline void clear_has_state_change_requirement();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_id_;
  ::google::protobuf::int32 state_change_requirement_;
  friend void  protobuf_AddDesc_actor_5fstate_5fcfg_2eproto();
  friend void protobuf_AssignDesc_actor_5fstate_5fcfg_2eproto();
  friend void protobuf_ShutdownFile_actor_5fstate_5fcfg_2eproto();

  void InitAsDefaultInstance();
  static NextStateCfg* default_instance_;
};
// -------------------------------------------------------------------

class StateCfg : public ::google::protobuf::Message {
 public:
  StateCfg();
  virtual ~StateCfg();

  StateCfg(const StateCfg& from);

  inline StateCfg& operator=(const StateCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StateCfg& default_instance();

  void Swap(StateCfg* other);

  // implements Message ----------------------------------------------

  StateCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StateCfg& from);
  void MergeFrom(const StateCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 actor_type = 1;
  inline bool has_actor_type() const;
  inline void clear_actor_type();
  static const int kActorTypeFieldNumber = 1;
  inline ::google::protobuf::int32 actor_type() const;
  inline void set_actor_type(::google::protobuf::int32 value);

  // required int32 state_id = 2;
  inline bool has_state_id() const;
  inline void clear_state_id();
  static const int kStateIdFieldNumber = 2;
  inline ::google::protobuf::int32 state_id() const;
  inline void set_state_id(::google::protobuf::int32 value);

  // repeated .gamer.cfg.NextStateCfg next_state = 3;
  inline int next_state_size() const;
  inline void clear_next_state();
  static const int kNextStateFieldNumber = 3;
  inline const ::gamer::cfg::NextStateCfg& next_state(int index) const;
  inline ::gamer::cfg::NextStateCfg* mutable_next_state(int index);
  inline ::gamer::cfg::NextStateCfg* add_next_state();
  inline const ::google::protobuf::RepeatedPtrField< ::gamer::cfg::NextStateCfg >&
      next_state() const;
  inline ::google::protobuf::RepeatedPtrField< ::gamer::cfg::NextStateCfg >*
      mutable_next_state();

  // required int32 enter_action = 4;
  inline bool has_enter_action() const;
  inline void clear_enter_action();
  static const int kEnterActionFieldNumber = 4;
  inline ::google::protobuf::int32 enter_action() const;
  inline void set_enter_action(::google::protobuf::int32 value);

  // optional int32 update_action = 5 [default = 1];
  inline bool has_update_action() const;
  inline void clear_update_action();
  static const int kUpdateActionFieldNumber = 5;
  inline ::google::protobuf::int32 update_action() const;
  inline void set_update_action(::google::protobuf::int32 value);

  // optional int32 enter_audio = 6 [default = 1];
  inline bool has_enter_audio() const;
  inline void clear_enter_audio();
  static const int kEnterAudioFieldNumber = 6;
  inline ::google::protobuf::int32 enter_audio() const;
  inline void set_enter_audio(::google::protobuf::int32 value);

  // optional int32 update_audio = 7 [default = 1];
  inline bool has_update_audio() const;
  inline void clear_update_audio();
  static const int kUpdateAudioFieldNumber = 7;
  inline ::google::protobuf::int32 update_audio() const;
  inline void set_update_audio(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamer.cfg.StateCfg)
 private:
  inline void set_has_actor_type();
  inline void clear_has_actor_type();
  inline void set_has_state_id();
  inline void clear_has_state_id();
  inline void set_has_enter_action();
  inline void clear_has_enter_action();
  inline void set_has_update_action();
  inline void clear_has_update_action();
  inline void set_has_enter_audio();
  inline void clear_has_enter_audio();
  inline void set_has_update_audio();
  inline void clear_has_update_audio();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 actor_type_;
  ::google::protobuf::int32 state_id_;
  ::google::protobuf::RepeatedPtrField< ::gamer::cfg::NextStateCfg > next_state_;
  ::google::protobuf::int32 enter_action_;
  ::google::protobuf::int32 update_action_;
  ::google::protobuf::int32 enter_audio_;
  ::google::protobuf::int32 update_audio_;
  friend void  protobuf_AddDesc_actor_5fstate_5fcfg_2eproto();
  friend void protobuf_AssignDesc_actor_5fstate_5fcfg_2eproto();
  friend void protobuf_ShutdownFile_actor_5fstate_5fcfg_2eproto();

  void InitAsDefaultInstance();
  static StateCfg* default_instance_;
};
// -------------------------------------------------------------------

class ActorStateCfg : public ::google::protobuf::Message {
 public:
  ActorStateCfg();
  virtual ~ActorStateCfg();

  ActorStateCfg(const ActorStateCfg& from);

  inline ActorStateCfg& operator=(const ActorStateCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorStateCfg& default_instance();

  void Swap(ActorStateCfg* other);

  // implements Message ----------------------------------------------

  ActorStateCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorStateCfg& from);
  void MergeFrom(const ActorStateCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gamer.cfg.StateCfg state_cfg = 1;
  inline int state_cfg_size() const;
  inline void clear_state_cfg();
  static const int kStateCfgFieldNumber = 1;
  inline const ::gamer::cfg::StateCfg& state_cfg(int index) const;
  inline ::gamer::cfg::StateCfg* mutable_state_cfg(int index);
  inline ::gamer::cfg::StateCfg* add_state_cfg();
  inline const ::google::protobuf::RepeatedPtrField< ::gamer::cfg::StateCfg >&
      state_cfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::gamer::cfg::StateCfg >*
      mutable_state_cfg();

  // @@protoc_insertion_point(class_scope:gamer.cfg.ActorStateCfg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gamer::cfg::StateCfg > state_cfg_;
  friend void  protobuf_AddDesc_actor_5fstate_5fcfg_2eproto();
  friend void protobuf_AssignDesc_actor_5fstate_5fcfg_2eproto();
  friend void protobuf_ShutdownFile_actor_5fstate_5fcfg_2eproto();

  void InitAsDefaultInstance();
  static ActorStateCfg* default_instance_;
};
// ===================================================================


// ===================================================================

// NextStateCfg

// required int32 state_id = 1;
inline bool NextStateCfg::has_state_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NextStateCfg::set_has_state_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NextStateCfg::clear_has_state_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NextStateCfg::clear_state_id() {
  state_id_ = 0;
  clear_has_state_id();
}
inline ::google::protobuf::int32 NextStateCfg::state_id() const {
  // @@protoc_insertion_point(field_get:gamer.cfg.NextStateCfg.state_id)
  return state_id_;
}
inline void NextStateCfg::set_state_id(::google::protobuf::int32 value) {
  set_has_state_id();
  state_id_ = value;
  // @@protoc_insertion_point(field_set:gamer.cfg.NextStateCfg.state_id)
}

// required int32 state_change_requirement = 2;
inline bool NextStateCfg::has_state_change_requirement() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NextStateCfg::set_has_state_change_requirement() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NextStateCfg::clear_has_state_change_requirement() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NextStateCfg::clear_state_change_requirement() {
  state_change_requirement_ = 0;
  clear_has_state_change_requirement();
}
inline ::google::protobuf::int32 NextStateCfg::state_change_requirement() const {
  // @@protoc_insertion_point(field_get:gamer.cfg.NextStateCfg.state_change_requirement)
  return state_change_requirement_;
}
inline void NextStateCfg::set_state_change_requirement(::google::protobuf::int32 value) {
  set_has_state_change_requirement();
  state_change_requirement_ = value;
  // @@protoc_insertion_point(field_set:gamer.cfg.NextStateCfg.state_change_requirement)
}

// -------------------------------------------------------------------

// StateCfg

// required int32 actor_type = 1;
inline bool StateCfg::has_actor_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateCfg::set_has_actor_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StateCfg::clear_has_actor_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StateCfg::clear_actor_type() {
  actor_type_ = 0;
  clear_has_actor_type();
}
inline ::google::protobuf::int32 StateCfg::actor_type() const {
  // @@protoc_insertion_point(field_get:gamer.cfg.StateCfg.actor_type)
  return actor_type_;
}
inline void StateCfg::set_actor_type(::google::protobuf::int32 value) {
  set_has_actor_type();
  actor_type_ = value;
  // @@protoc_insertion_point(field_set:gamer.cfg.StateCfg.actor_type)
}

// required int32 state_id = 2;
inline bool StateCfg::has_state_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateCfg::set_has_state_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StateCfg::clear_has_state_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StateCfg::clear_state_id() {
  state_id_ = 0;
  clear_has_state_id();
}
inline ::google::protobuf::int32 StateCfg::state_id() const {
  // @@protoc_insertion_point(field_get:gamer.cfg.StateCfg.state_id)
  return state_id_;
}
inline void StateCfg::set_state_id(::google::protobuf::int32 value) {
  set_has_state_id();
  state_id_ = value;
  // @@protoc_insertion_point(field_set:gamer.cfg.StateCfg.state_id)
}

// repeated .gamer.cfg.NextStateCfg next_state = 3;
inline int StateCfg::next_state_size() const {
  return next_state_.size();
}
inline void StateCfg::clear_next_state() {
  next_state_.Clear();
}
inline const ::gamer::cfg::NextStateCfg& StateCfg::next_state(int index) const {
  // @@protoc_insertion_point(field_get:gamer.cfg.StateCfg.next_state)
  return next_state_.Get(index);
}
inline ::gamer::cfg::NextStateCfg* StateCfg::mutable_next_state(int index) {
  // @@protoc_insertion_point(field_mutable:gamer.cfg.StateCfg.next_state)
  return next_state_.Mutable(index);
}
inline ::gamer::cfg::NextStateCfg* StateCfg::add_next_state() {
  // @@protoc_insertion_point(field_add:gamer.cfg.StateCfg.next_state)
  return next_state_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gamer::cfg::NextStateCfg >&
StateCfg::next_state() const {
  // @@protoc_insertion_point(field_list:gamer.cfg.StateCfg.next_state)
  return next_state_;
}
inline ::google::protobuf::RepeatedPtrField< ::gamer::cfg::NextStateCfg >*
StateCfg::mutable_next_state() {
  // @@protoc_insertion_point(field_mutable_list:gamer.cfg.StateCfg.next_state)
  return &next_state_;
}

// required int32 enter_action = 4;
inline bool StateCfg::has_enter_action() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StateCfg::set_has_enter_action() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StateCfg::clear_has_enter_action() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StateCfg::clear_enter_action() {
  enter_action_ = 0;
  clear_has_enter_action();
}
inline ::google::protobuf::int32 StateCfg::enter_action() const {
  // @@protoc_insertion_point(field_get:gamer.cfg.StateCfg.enter_action)
  return enter_action_;
}
inline void StateCfg::set_enter_action(::google::protobuf::int32 value) {
  set_has_enter_action();
  enter_action_ = value;
  // @@protoc_insertion_point(field_set:gamer.cfg.StateCfg.enter_action)
}

// optional int32 update_action = 5 [default = 1];
inline bool StateCfg::has_update_action() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StateCfg::set_has_update_action() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StateCfg::clear_has_update_action() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StateCfg::clear_update_action() {
  update_action_ = 1;
  clear_has_update_action();
}
inline ::google::protobuf::int32 StateCfg::update_action() const {
  // @@protoc_insertion_point(field_get:gamer.cfg.StateCfg.update_action)
  return update_action_;
}
inline void StateCfg::set_update_action(::google::protobuf::int32 value) {
  set_has_update_action();
  update_action_ = value;
  // @@protoc_insertion_point(field_set:gamer.cfg.StateCfg.update_action)
}

// optional int32 enter_audio = 6 [default = 1];
inline bool StateCfg::has_enter_audio() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StateCfg::set_has_enter_audio() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StateCfg::clear_has_enter_audio() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StateCfg::clear_enter_audio() {
  enter_audio_ = 1;
  clear_has_enter_audio();
}
inline ::google::protobuf::int32 StateCfg::enter_audio() const {
  // @@protoc_insertion_point(field_get:gamer.cfg.StateCfg.enter_audio)
  return enter_audio_;
}
inline void StateCfg::set_enter_audio(::google::protobuf::int32 value) {
  set_has_enter_audio();
  enter_audio_ = value;
  // @@protoc_insertion_point(field_set:gamer.cfg.StateCfg.enter_audio)
}

// optional int32 update_audio = 7 [default = 1];
inline bool StateCfg::has_update_audio() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StateCfg::set_has_update_audio() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StateCfg::clear_has_update_audio() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StateCfg::clear_update_audio() {
  update_audio_ = 1;
  clear_has_update_audio();
}
inline ::google::protobuf::int32 StateCfg::update_audio() const {
  // @@protoc_insertion_point(field_get:gamer.cfg.StateCfg.update_audio)
  return update_audio_;
}
inline void StateCfg::set_update_audio(::google::protobuf::int32 value) {
  set_has_update_audio();
  update_audio_ = value;
  // @@protoc_insertion_point(field_set:gamer.cfg.StateCfg.update_audio)
}

// -------------------------------------------------------------------

// ActorStateCfg

// repeated .gamer.cfg.StateCfg state_cfg = 1;
inline int ActorStateCfg::state_cfg_size() const {
  return state_cfg_.size();
}
inline void ActorStateCfg::clear_state_cfg() {
  state_cfg_.Clear();
}
inline const ::gamer::cfg::StateCfg& ActorStateCfg::state_cfg(int index) const {
  // @@protoc_insertion_point(field_get:gamer.cfg.ActorStateCfg.state_cfg)
  return state_cfg_.Get(index);
}
inline ::gamer::cfg::StateCfg* ActorStateCfg::mutable_state_cfg(int index) {
  // @@protoc_insertion_point(field_mutable:gamer.cfg.ActorStateCfg.state_cfg)
  return state_cfg_.Mutable(index);
}
inline ::gamer::cfg::StateCfg* ActorStateCfg::add_state_cfg() {
  // @@protoc_insertion_point(field_add:gamer.cfg.ActorStateCfg.state_cfg)
  return state_cfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gamer::cfg::StateCfg >&
ActorStateCfg::state_cfg() const {
  // @@protoc_insertion_point(field_list:gamer.cfg.ActorStateCfg.state_cfg)
  return state_cfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::gamer::cfg::StateCfg >*
ActorStateCfg::mutable_state_cfg() {
  // @@protoc_insertion_point(field_mutable_list:gamer.cfg.ActorStateCfg.state_cfg)
  return &state_cfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cfg
}  // namespace gamer

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::gamer::cfg::StateChangeRequirements> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gamer::cfg::StateChangeRequirements>() {
  return ::gamer::cfg::StateChangeRequirements_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_actor_5fstate_5fcfg_2eproto__INCLUDED
